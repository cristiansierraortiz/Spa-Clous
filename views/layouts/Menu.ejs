<!DOCTYPE html>
<html lang="es">

<head>
  <title>SPA Clous</title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  <% /* If you want to discourage search engines from indexing this site, uncomment the following line: */%>
    <% /* <meta name="robots" content="noindex"> */%>


      <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

      <!--STYLES ADD-->
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
      <link rel="stylesheet" href="//cdn.datatables.net/1.13.1/css/jquery.dataTables.min.css">
      <link rel="stylesheet" href="/styles/estilos.css">
      <link rel="stylesheet" href="/styles/importer.css">
      <link rel="stylesheet" href="/styles/owl.carousel.min.css">
      <!--STYLES ADD END-->

</head>

<body>

  <div class="wrapper d-flex align-items-stretch">
    <nav id="sidebar">
      <div class="custom-menu">
        <button type="button" id="sidebarCollapse" class="btn btn-info">
          <i class="fa fa-bars"></i>
        </button>
      </div>
      <div class="barra">
        <h1><a href="/dashboard" class="logo"><img src="../images/bg_login.jpg" alt="img_logo"><span>
              <%= session.nombreCompleto%>
            </span></a></h1>
        <ul class="list-unstyled components mt-5 mb-5">
          <li class="">
            <a href="/dashboard"><span class="fa fa-home mr-3"></span>Dashboard</a>
          </li>
          <li class="">
            <a href="/administradores"><span class="fa fa-people-arrows mr-3"></span>Administradores</a>
          </li>
          <li class="">
            <a href="/clientes"><span class="fa fa-people-group mr-3"></span>Clientes</a>
          </li>
          <li class="">
            <a href="/citas"><span class="fa fa-calendar-days mr-3"></span>Citas</a>
          </li>
          <li class="">
            <a href="/colores"><span class="fa fa-palette mr-3"></span>Cromoterapia</a>
          </li>
          <li class="">
            <a href="/aromas"><span class="fa fa-spray-can mr-3"></span>Aromaterapia</a>
          </li>
          <li class="">
            <a href="/generos-musicales"><span class="fa fa-music mr-3"></span>Musicoterapia</a>
          </li>
          <li class="">
            <a href="/terapias"><span class="fa fa-person-dots-from-line mr-3"></span>Terapias</a>
          </li>
        </ul>

        <div class="d-grid gap-2">
          <a href="/cerrar-sesion" class="btn btn-secondary salir"><span
              class="fa fa-right-from-bracket"></span>Salir</a>
        </div>

      </div>
    </nav>

    <!-- Page Content  -->
    <div id="content">
      <%- body %>
    </div>
  </div>

  <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

  <!--TEMPLATES-->
  <!--TEMPLATES END-->


  <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


  <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

  <!--SCRIPTS-->
  <script src="/dependencies/sails.io.js"></script>
  <script src="/js/1.jquery.min.js"></script>
  <script src="/js/2.jquery-3.5.1.js"></script>
  <script src="/js/login.js"></script>
  <script src="/js/main.js"></script>
  <script src="/js/owl.carousel.min.js"></script>
  <script src="/js/popper.min.js"></script>
  <!--SCRIPTS END-->

  <!--SCRIPTS ADD-->
  <script src="https://kit.fontawesome.com/41dcbddeb7.js" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
    crossorigin="anonymous"></script>
  <script src="//cdn.datatables.net/1.13.1/js/jquery.dataTables.min.js"></script>
  <script src="//cdn.datatables.net/plug-ins/1.13.1/i18n/es-ES.json"></script>
  <!--SCRIPTS ADD END-->

</body>

</html>